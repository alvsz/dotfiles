using Gtk 4.0;
using AstalNotifd 0.1;

template $Notification: Revealer {
  transition-type: slide_down;
  reveal-child: true;
  notification: AstalNotifd.Notification {
    invoked => $on_invoked();
    resolved => $on_resolved();
  };

  child: Box {
    homogeneous: false;
    orientation: vertical;
    halign: fill;
    valign: start;
    styles ["notification"]

    
    Box {
      homogeneous: false;
      orientation: horizontal;
      styles ["header"]

      Image {
        icon-name: bind $get_app_icon(template.notification as <AstalNotifd.Notification>.app-icon) as <string>;
        visible: bind $app_icon_visible(template.notification as <AstalNotifd.Notification>.app-icon) as <bool>;
        styles ["app-icon"]
      }
      Label {
        halign: fill;
        xalign: 0;
        ellipsize: end;
        hexpand: true;
        max-width-chars: 40;
        label: bind $get_app_name(template.notification as <AstalNotifd.Notification>.app-name) as <string>;
        styles ["app-name"]
      }
      Label {
        label: bind $format_time(template.notification as <AstalNotifd.Notification>.time) as <string>;
        styles ["time"]
      }
      Button {
        halign: end;
        icon-name: "window-close-symbolic";
        visible: bind template.not_hidden;
        clicked => $on_clicked();
      }
    }
    Separator { }
    Box {
      homogeneous: false;
      orientation: horizontal;
      styles ["content"]

      Image {
        valign: start;
        icon-name: bind $get_icon(template.notification as <AstalNotifd.Notification>.image) as <string>;
        visible: bind $icon_visible(template.notification as <AstalNotifd.Notification>.image) as <bool>;
        styles ["icon"]
      }
      Image {
        valign: start;
        file: bind $get_ficon(template.notification as <AstalNotifd.Notification>.image) as <string>;
        visible: bind $ficon_visible(template.notification as <AstalNotifd.Notification>.image) as <bool>;
        styles ["icon"]
      }
      Box {
        homogeneous: false;
        orientation: vertical;
        Label {
          halign: start;
          xalign: 0;
          wrap: true;
          justify: left;
          max-width-chars: 26;
          label: bind template.notification as <AstalNotifd.Notification>.summary;
          styles ["summary"]
        }
        Label {
          halign: fill;
          hexpand: true;
          xalign: 0;
          wrap: true;
          use-markup: true;
          justify: left;
          max-width-chars: 31;
          label: bind template.notification as <AstalNotifd.Notification>.body;
          visible: bind template.not_hidden;
          styles ["body"]
        }
      }
    }
    Box actions {
      halign: fill;
      hexpand: true;
      homogeneous: true;
      visible: false;
      styles ["actions"]
    }
  };
}
