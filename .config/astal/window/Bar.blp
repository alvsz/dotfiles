using Gtk 4.0;
using Astal 4.0;

template $Bar: Astal.Window {
    exclusivity: exclusive;
    layer: bottom;
    powered: false;
    styles ["Bar"]

    CenterBox {
        start-widget: Box {
            orientation: horizontal;
            homogeneous: false;
            spacing: 0;
            halign: start;
            valign: fill;
            styles ["left"]
            Label {
                halign: start;
                label: "teste";
            }
            Button {
                child: Label {
                    label: "arch";
                };
            }
        };

        center-widget: Box {
            styles ["center"]
            Button {
                child: Stack mpris_stack {
                    hhomogeneous: false;
                    vhomogeneous: true;
                    interpolate-size: true;
                    transition-type: slide_up;
                };
                clicked => $on_mpris_button_clicked();

                EventControllerScroll {
                    scroll => $on_mpris_button_scroll();
                    flags: vertical;
                }
            }
        };

        end-widget: Box {
            orientation: horizontal;
            homogeneous: false;
            spacing: 0;
            halign: end;
            valign: fill;
            styles ["right"]
            Revealer {
                transition-type: slide_left;
                reveal-child: bind tray_toggle.active;
                child: Box {
                    Label {
                        label: "teste";
                    }
                    Label {
                        label: "teste";
                    }
                    Label {
                        label: "teste";
                    }
                    Label {
                        label: "teste";
                    }
                };
            }
            ToggleButton tray_toggle {
                child: Image {
                };
            }
            Image {
                icon-name: bind $bluetooth_icon(template.powered) as <string>;
            }
            Label clock {
            }
        };
    }
}
