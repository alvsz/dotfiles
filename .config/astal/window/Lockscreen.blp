using Gtk 4.0;
using AccountsService 1.0;
using AstalMpris 0.1;
using AstalCava 0.1;

template $Lockscreen: Window {
  styles ["Lockscreen"]
  cava: AstalCava.Cava {
    bars: 6;
    active: bind template.lock as <$Lock>.locked;
  };

  Box {
    orientation: vertical;
    homogeneous: false;
    halign: fill;
    valign: fill;
    hexpand: true;
    vexpand: true;

    StackSwitcher {
      stack: stack;
      halign: fill;
      valign: start;
      hexpand: true;
    }

    Stack stack {
      hhomogeneous: true;
      vhomogeneous: true;
      interpolate-size: false;
      transition-type: slide_up_down;
      valign: fill;
      halign: fill;
      hexpand: true;
      vexpand: true;

      StackPage {
        name: "time";
        title: "Coisas coisaveis";
        child: Box {
          orientation: vertical;
          homogeneous: false;
          halign: center;
          valign: center;
          styles ["preview-page"]

          Label date {
            halign: center;
            valign: start;
            styles ["date"]
          }
          Label clock {
            halign: center;
            valign: start;
            styles ["clock"]
          }
          Box mpris {
            orientation: vertical;
            homogeneous: false;
            halign: fill;
            valign: fill;
            styles ["mpris"]

            Box {
              orientation: horizontal;
              Image {
                valign: center;
                halign: start;
                file: bind template.player as <AstalMpris.Player>.cover-art;
                styles ["cover-art"]
              }
              Box {
                orientation: vertical;
                valign: center;

                Label {
                  label: bind template.player as <AstalMpris.Player>.title;
                  hexpand: true;
                  wrap: false;
                  ellipsize: end;
                  halign: start;
                  max-width-chars: 30;
                  styles ["heading"]
                }
                Label {
                  hexpand: true;
                  wrap: false;
                  ellipsize: end;
                  halign: start;
                  max-width-chars: 30;
                  label: bind template.player as <AstalMpris.Player>.artist;
                }
              }
              DrawingArea cava {
                styles ["cava"]
              }
            }

            CenterBox {
              start-widget: Label {
                halign: center;
                valign: center;
                label: bind $format_position(template.player as <AstalMpris.Player>.position) as <string>;
                styles ["position"]
              };

              center-widget: Scale {
                valign: center;
                halign: fill;
                hexpand: true;
                adjustment: Adjustment {
                  value: bind template.player as <AstalMpris.Player>.position;
                  lower: 0;
                  upper: bind template.player as <AstalMpris.Player>.length;
                  value-changed => $on_value_changed();
                };
              };

              end-widget: Label {
                halign: center;
                valign: center;
                label: bind $format_length(template.player as <AstalMpris.Player>.length) as <string>;
                styles ["length"]
              };
            }
            Box {
              orientation: horizontal;
              homogeneous: true;
              Label {
                label: "";
                visible: bind $spacer_visible(template.player as <AstalMpris.Player>) as <bool>;
              }
              Button previous {
                icon-name: "media-skip-backward-symbolic";
                visible: bind template.player as <AstalMpris.Player>.can-go-previous;
                clicked => $on_previous();
              }
              Button playpause {
                icon-name: bind $format_play_button(template.player as <AstalMpris.Player>.playback-status) as <string>;
                visible: bind template.player as <AstalMpris.Player>.can-pause;
                clicked => $on_playpause();
              }
              Button next {
                icon-name: "media-skip-forward-symbolic";
                visible: bind template.player as <AstalMpris.Player>.can-go-next;
                clicked => $on_next();
              }
              Label {
                label: "c";
              }
            }
          }
        };
      }

      StackPage {
        name: "normal";
        title: "Testes test√°veis";
        child: Box {
          orientation: vertical;
          homogeneous: false;
          halign: center;
          valign: center;
          styles ["unlock-page"]

          Image {
            file: bind template.user as <AccountsService.User>.icon-file;
          }
          Label {
            label: bind template.user as <AccountsService.User>.real-name;
            styles ["user-name"]
          }
          Entry password {
            placeholder-text: bind template.lock as <$Lock>.prompt;
            visibility: false;
            sensitive: bind template.lock as <$Lock>.can_authenticate;
            // secondary-icon-name: "go-next-symbolic";
            activate => $on_authenticate();
            notify::text => $on_change();
          }
          Label error {
            halign: center;
            visible: bind $is_error_visible(template.lock as <$Lock>.error) as <bool>;
            label: bind template.lock as <$Lock>.error;
            styles ["error"]
          }
          Button auth {
            label: "Autenticar";
            halign: center;
            sensitive: bind template.lock as <$Lock>.can_authenticate;
            clicked => $on_authenticate();
            styles ["auth", "suggested-action"]
          }
          Label info {
            visible: bind $is_info_visible(template.lock as <$Lock>.info) as <bool>;
            label: bind template.lock as <$Lock>.info;
            styles ["info"]
          }
        };
      }
    }
  }
}
